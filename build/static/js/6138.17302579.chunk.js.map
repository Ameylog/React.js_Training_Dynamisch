{"version":3,"file":"static/js/6138.17302579.chunk.js","mappings":"iLAyZA,QA3WA,WAEI,MAAMA,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,IAAK,GACLC,KAAM,GACNC,IAAK,KACLC,OAAQ,GACRC,QAAS,GACTC,UAAW,GACXC,KAAM,GACNC,SAAU,UACVC,UAAW,IAIfC,iBAAkBC,EAAAA,GAAW,CACzBd,MAAOc,EAAAA,KACFC,IAAI,GAAI,gCACRC,QAAQ,wBAAyB,gBACjCC,SAAS,oBAEdhB,MAAOa,EAAAA,KACFb,MAAM,yBACNe,QAAQ,4CAA6C,yBACrDC,SAAS,qBAEdf,SAAUY,EAAAA,KACLI,IAAI,EAAG,+BACPH,IAAI,GAAI,kCACRC,QAAQ,yBAA0B,sCAClCA,QAAQ,QAAS,oCACjBA,QAAQ,QAAS,uCACjBA,QAAQ,QAAS,mCACjBC,SAAS,wBAEdd,gBAAiBW,EAAAA,KACZI,IAAI,EAAG,+BACPH,IAAI,GAAI,kCACRC,QAAQ,yBAA0B,sCAClCA,QAAQ,QAAS,oCACjBA,QAAQ,QAAS,uCACjBA,QAAQ,QAAS,mCACjBG,MAAM,CAACL,EAAAA,GAAQ,aAAc,wBAC7BG,SAAS,gCAEdb,IAAKU,EAAAA,KACAE,QAAQ,WAAY,qBACpBC,SAAS,0BAEdZ,KAAMS,EAAAA,KACDC,IAAI,GAAI,gCACRE,SAAS,oBAEdX,IAAKQ,EAAAA,KACAI,IAAI,cACJD,SAAS,0BAEdV,OAAQO,EAAAA,KACHK,MAAM,CAAC,OAAQ,UAAW,sBAC1BF,SAAS,sBAEdT,QAASM,EAAAA,KACJG,SAAS,sBAEdR,UAAWK,EAAAA,KACNI,IAAI,EAAG,uBACPD,SAAS,wBAEdP,KAAMI,EAAAA,KACDM,KAAK,WAAY,0BAA2BC,IACpCA,GACEA,EAAMC,MAAQ,UAExBF,KAAK,WAAY,qBAAsBC,IAC/BA,GACE,CAAC,aAAc,YAAa,mBAAmBE,SAASF,EAAMG,QACtEP,SAAS,oBAEhBN,SAAUG,EAAAA,KAAaG,SAAS,8BAChCL,UAAWE,EAAAA,KAAaW,KAAK,YAAY,CAACd,EAAUC,IAC/B,YAAbD,EACOC,EAAUK,SAAS,yBAEvBL,MAIfc,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAC5BE,QAAQC,IAAIC,KAAKC,UAAUN,EAAQ,KAAM,IACzCG,QAAQC,IAAI,QAASJ,EAAOjB,MAC5BoB,QAAQC,IAAI,MAAOJ,EAAOrB,KAC1BuB,GAAW,KAKZK,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,aACxCC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,YAErD,OACIG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,UAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2FAA0FC,UAErGC,EAAAA,EAAAA,MAAA,QAAMC,OAAO,GAAGjB,SAAU7B,EAAO+C,aAAcC,QAAShD,EAAOiD,YAAYL,SAAA,EAEvEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YAGJF,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,QAAQC,MAAO,CAAEC,YAAa,QAASR,SAAC,SAAY,KAACF,EAAAA,EAAAA,KAAA,UACpEA,EAAAA,EAAAA,KAAA,SACIf,KAAK,OACL0B,GAAG,QACHC,KAAK,QACLC,SAAUvD,EAAOwD,aAGjBhC,MAAOxB,EAAO8B,OAAO3B,MACrBgD,MAAO,CAAEM,MAAO,OAAQC,OAAQ,OAChCC,YAAY,oBAEf3D,EAAO4D,OAAOzD,OAAQuC,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAOzD,QAAe,MAGnFuC,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,QAAQC,MAAO,CAAEC,YAAa,SAAUR,SAAC,kBAAqB,KAACF,EAAAA,EAAAA,KAAA,UAC9EA,EAAAA,EAAAA,KAAA,SACIf,KAAK,QACL0B,GAAG,QACHC,KAAK,QACLC,SAAUvD,EAAOwD,aAEjBhC,MAAOxB,EAAO8B,OAAO1B,MACrB+C,MAAO,CAAEM,MAAO,OAAQC,OAAQ,OAChCC,YAAY,6BAEf3D,EAAO4D,OAAOxD,OAAQsC,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAOxD,QAAe,MAGnFsC,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,WAAWC,MAAO,CAAEC,YAAa,UAAWR,SAAC,cAAgBF,EAAAA,EAAAA,KAAA,UAC5EA,EAAAA,EAAAA,KAAA,SACIf,KAAMU,EACNgB,GAAG,YACHC,KAAK,WACLC,SAAUvD,EAAOwD,aACjBhC,MAAOxB,EAAO8B,OAAOzB,SACrB8C,MAAO,CAAEM,MAAO,OAAQC,OAAQ,OAChCC,YAAY,wBAEC,aAAhBtB,GACGK,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CAAEW,SAAU,WAAYC,UAAW,qBAAuBnB,UACnEF,EAAAA,EAAAA,KAACsB,EAAAA,IAAU,CAACC,QAASA,IAAM3B,EAAe,aAE5CI,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CAAEW,SAAU,WAAYC,UAAW,qBAAuBnB,UACrEF,EAAAA,EAAAA,KAACwB,EAAAA,IAAK,CAACD,QAASA,IAAM3B,EAAe,gBAG5CtC,EAAO4D,OAAOvD,UAAWqC,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAOvD,WAAkB,MAGzFqC,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,kBAAkBC,MAAO,CAAEC,YAAa,OAAQR,SAAC,sBAAwBF,EAAAA,EAAAA,KAAA,UACxFA,EAAAA,EAAAA,KAAA,SACIf,KAAMa,EACNa,GAAG,kBACHC,KAAK,kBACLC,SAAUvD,EAAOwD,aACjBhC,MAAOxB,EAAO8B,OAAOxB,gBACrB6C,MAAO,CAAEM,MAAO,OAAQC,OAAQ,OAChCC,YAAY,gCAEI,aAAnBnB,GACGE,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CAAEW,SAAU,WAAYC,UAAW,qBAAuBnB,UACnEF,EAAAA,EAAAA,KAACsB,EAAAA,IAAU,CAACC,QAASA,IAAMxB,EAAkB,aAE/CC,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CAAEW,SAAU,WAAYC,UAAW,qBAAuBnB,UACrEF,EAAAA,EAAAA,KAACwB,EAAAA,IAAK,CAACD,QAASA,IAAMxB,EAAkB,iBAEhDC,EAAAA,EAAAA,KAAA,SACC1C,EAAO4D,OAAOtD,iBAAkBoC,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAOtD,kBAAyB,MAGvGoC,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,MAAMC,MAAO,CAAEC,YAAa,QAASR,SAAC,cAAiB,KAACF,EAAAA,EAAAA,KAAA,UACvEA,EAAAA,EAAAA,KAAA,SACIf,KAAK,SACL0B,GAAG,MACHC,KAAK,MACLC,SAAUvD,EAAOwD,aAEjBhC,MAAOxB,EAAO8B,OAAOvB,IACrB4C,MAAO,CAAEM,MAAO,OAAQC,OAAQ,OAChCC,YAAY,8BAGhBjB,EAAAA,EAAAA,KAAA,SACC1C,EAAO4D,OAAOrD,KAAMmC,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAOrD,MAAa,MAG/EmC,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,OAAOC,MAAO,CAAEC,YAAa,QAASR,SAAC,SAAY,KAACF,EAAAA,EAAAA,KAAA,UACnEA,EAAAA,EAAAA,KAAA,SACIf,KAAK,OACL0B,GAAG,OACHC,KAAK,OACLC,SAAUvD,EAAOwD,aAEjBhC,MAAOxB,EAAO8B,OAAOtB,KACrB2C,MAAO,CAAEM,MAAO,OAAQC,OAAQ,OAChCC,YAAY,oBACd,KAACjB,EAAAA,EAAAA,KAAA,SACF1C,EAAO4D,OAAOpD,MAAOkC,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAOpD,OAAc,MAGjFkC,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,MAAMC,MAAO,CAAEC,YAAa,OAAQR,SAAC,kBAAqB,KAACF,EAAAA,EAAAA,KAAA,UAC1EA,EAAAA,EAAAA,KAAA,SACIf,KAAK,OACL0B,GAAG,MACHC,KAAK,MACLC,SAAUvD,EAAOwD,aACjBhC,MAAOxB,EAAO8B,OAAOrB,IACrB0C,MAAO,CAAEM,MAAO,OAAQC,OAAQ,SAClC,KAAChB,EAAAA,EAAAA,KAAA,SACF1C,EAAO4D,OAAOnD,KAAMiC,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAOnD,MAAa,MAG/EoC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,SAAQN,SAAC,YAExBF,EAAAA,EAAAA,KAAA,SACIf,KAAK,QACL2B,KAAK,SACL9B,MAAM,OACN6B,GAAG,OACHE,SAAUvD,EAAOwD,aACjBL,MAAO,CAAEgB,WAAY,WACzBzB,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,OAAOC,MAAO,CAAEgB,WAAY,QAASvB,SAAC,UAErDF,EAAAA,EAAAA,KAAA,SACIf,KAAK,QACL2B,KAAK,SACL9B,MAAM,SACN6B,GAAG,SACHE,SAAUvD,EAAOwD,aACjBL,MAAO,CAAEgB,WAAY,WACzBzB,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,SAASC,MAAO,CAAEgB,WAAY,QAASvB,SAAC,cAE1D5C,EAAO4D,OAAOlD,QAASgC,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAOlD,SAAgB,MAGrFgC,EAAAA,EAAAA,KAAA,OAAAE,UACIC,EAAAA,EAAAA,MAAA,UACIQ,GAAG,UACHC,KAAK,UACLC,SAAUvD,EAAOwD,aACjBhC,MAAOxB,EAAO8B,OAAOnB,QACrBwC,MAAO,CAAEM,MAAO,OAAQC,OAAQ,OAAQd,SAAA,EAExCF,EAAAA,EAAAA,KAAA,UAAQlB,MAAM,GAAEoB,SAAC,oBACjBF,EAAAA,EAAAA,KAAA,UAAQlB,MAAM,QAAOoB,SAAC,WACtBF,EAAAA,EAAAA,KAAA,UAAQlB,MAAM,MAAKoB,SAAC,mBACpBF,EAAAA,EAAAA,KAAA,UAAQlB,MAAM,KAAIoB,SAAC,oBACnBF,EAAAA,EAAAA,KAAA,UAAQlB,MAAM,SAAQoB,SAAC,gBAI9B5C,EAAO4D,OAAOjD,SAAU+B,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAOjD,UAAiB,MAGvFkC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,gBACPC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SACIf,KAAK,WACL2B,KAAK,YACL9B,MAAM,OACN4C,QAASpE,EAAO8B,OAAOlB,UAAUc,SAAS,QAC1C6B,SAAUvD,EAAOwD,aACjBb,UAAU,SACZ,WAGNE,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SACIf,KAAK,WACL2B,KAAK,YACL9B,MAAM,KACN4C,QAASpE,EAAO8B,OAAOlB,UAAUc,SAAS,MAC1C6B,SAAUvD,EAAOwD,aACjBb,UAAU,SACZ,SAGNE,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SACIf,KAAK,WACL2B,KAAK,YACL9B,MAAM,SACN4C,QAASpE,EAAO8B,OAAOlB,UAAUc,SAAS,UAC1C6B,SAAUvD,EAAOwD,aACjBb,UAAU,SACZ,aAEED,EAAAA,EAAAA,KAAA,SACP1C,EAAO4D,OAAOhD,WAAY8B,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAOhD,YAAmB,SAK/FiC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOQ,QAAQ,OAAOC,MAAO,CAAEC,YAAa,QAASR,SAAC,iBAAmBF,EAAAA,EAAAA,KAAA,UACzEA,EAAAA,EAAAA,KAAA,SACIW,GAAG,OACHC,KAAK,OACL3B,KAAK,OACLwB,MAAO,CAAEM,MAAO,QAChBF,SAAWc,GAAUrE,EAAOsE,cAAc,OAAQD,EAAME,cAAcC,MAAM,MAE/ExE,EAAO4D,OAAO/C,MAAO6B,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAO/C,OAAc,SAIrFgC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SACIf,KAAK,QACL2B,KAAK,WACL9B,MAAM,UACN+B,SAAUvD,EAAOwD,eAAgB,eAGzCX,EAAAA,EAAAA,MAAA,SAAOM,MAAO,CAAEgB,WAAY,OAAQvB,SAAA,EAChCF,EAAAA,EAAAA,KAAA,SACIf,KAAK,QACL2B,KAAK,WACL9B,MAAM,UACN+B,SAAUvD,EAAOwD,eAAgB,iBAMjB,YAA3BxD,EAAO8B,OAAOhB,WACX+B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,SACIf,KAAK,OACL2B,KAAK,YACLC,SAAUvD,EAAOwD,aACjBG,YAAY,0BACf3D,EAAO4D,OAAO7C,WAAY2B,EAAAA,EAAAA,KAAA,OAAKS,MAAO,CAAEU,MAAO,OAAQjB,SAAE5C,EAAO4D,OAAO7C,YAAmB,SAInG8B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,UAAQf,KAAK,SAASgB,UAAU,4BAA2BC,SAAC,YAC5DF,EAAAA,EAAAA,KAAA,UAAQf,KAAK,QAAQgB,UAAU,iCAAgCC,SAAC,mBAMxF,C","sources":["components/Day 24 formik_Yup_form/FormikForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { FaEyeSlash } from \"react-icons/fa\";\r\n\r\n//^ validation\r\n// const validate = values => {\r\n//     const errors = {};\r\n\r\n//     if (!values.fname) {\r\n//         errors.fname = \"Name is required\";\r\n//     } else if (values.fname.length > 15) {\r\n//         errors.fname = \"Mush be 15 charachter or less\";\r\n//     }\r\n\r\n//     if (!values.email) {\r\n//         errors.email = \"Email address required\";\r\n//     } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n//         errors.email = 'Invalid email address';\r\n//     }\r\n\r\n//     if (!values.password) {\r\n//         errors.password = \"Password is required\";\r\n//     } else if (values.password < 8) {\r\n//         errors.password = \"Password must be min 8\"\r\n//     }\r\n\r\n//     if (!values.mob) {\r\n//         errors.mob = \"Mobile number is required\";\r\n//     }\r\n\r\n//     if (!values.city) {\r\n//         errors.city = \"City is required\";\r\n//     }\r\n\r\n//     if (!values.dob) {\r\n//         errors.dob = \"Date of birth is required\";\r\n//     }\r\n\r\n//     return errors;\r\n// }\r\n\r\n//^ Yup Validation\r\n\r\n\r\nfunction FormikYupForm() {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            fname: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            mob: '',\r\n            city: '',\r\n            dob: null,\r\n            gender: \"\",\r\n            country: \"\",\r\n            interests: [],\r\n            file: '',\r\n            ageGroup: 'below18',\r\n            customAge: '',\r\n\r\n        },\r\n        // validate,\r\n        validationSchema: Yup.object({\r\n            fname: Yup.string()\r\n                .max(15, \"Must be 15 charcatre or less\")\r\n                .matches(/^[a-zA-Z][a-zA-Z\\s]*$/, \"Invalid name\")\r\n                .required(\"Name is required\"),\r\n\r\n            email: Yup.string()\r\n                .email(\"Invalid email address\")\r\n                .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, \"Invalid email address\")\r\n                .required(\"Email is required\"),\r\n\r\n            password: Yup.string()\r\n                .min(8, \"must be at least 8 charater\")\r\n                .max(16, \"Must be less than 16 character\")\r\n                .matches(/[!@#$%^&*(),.?\":{}|<>]/, \"Must conatin at least on charcater\")\r\n                .matches(/[0-9]/, \"Must contain at least one number\")\r\n                .matches(/[A-Z]/, \"Must contain at least one Uppercase\")\r\n                .matches(/[a-z]/, \"Must contain at least lowercase\")\r\n                .required(\"Password is required\"),\r\n\r\n            confirmPassword: Yup.string()\r\n                .min(8, \"must be at least 8 charater\")\r\n                .max(16, \"Must be less than 16 character\")\r\n                .matches(/[!@#$%^&*(),.?\":{}|<>]/, \"Must conatin at least on charcater\")\r\n                .matches(/[0-9]/, \"Must contain at least one number\")\r\n                .matches(/[A-Z]/, \"Must contain at least one Uppercase\")\r\n                .matches(/[a-z]/, \"Must contain at least lowercase\")\r\n                .oneOf([Yup.ref('password')], 'Passwords must match')\r\n                .required(\"Confirm Password is required\"),\r\n\r\n            mob: Yup.string()\r\n                .matches(/^\\d{10}$/, \"Must be 10 digits\")\r\n                .required(\"Mobile number required\"),\r\n\r\n            city: Yup.string()\r\n                .max(15, \"Must be 15 charcatre or less\")\r\n                .required(\"City is required\"),\r\n\r\n            dob: Yup.date()\r\n                .min(\"2000-01-01\")\r\n                .required(\"Date of birth required\"),\r\n\r\n            gender: Yup.string()\r\n                .oneOf(['male', 'female'], \"Gender is required\")\r\n                .required(\"Gender is required\"),\r\n\r\n            country: Yup.string()\r\n                .required(\"Select the country\"),\r\n\r\n            interests: Yup.array()\r\n                .min(1, \"select at least one\")\r\n                .required(\"Interest is required\"),\r\n\r\n            file: Yup.mixed()\r\n                .test('fileSize', 'File size is too large', (value) => {\r\n                    if (!value) return true;\r\n                    return value.size <= 1024 * 1024 * 2; // 2 MB\r\n                })\r\n                .test('fileType', 'Invalid file type', (value) => {\r\n                    if (!value) return true;\r\n                    return ['image/jpeg', 'image/png', 'application/pdf'].includes(value.type);\r\n                }).required(\"File is required\"),\r\n\r\n            ageGroup: Yup.string().required('Please select an age group'),\r\n            customAge: Yup.string().when('ageGroup', (ageGroup, customAge) => {\r\n                if (ageGroup === 'above18') {\r\n                    return customAge.required('Enter your PAN Number');\r\n                }\r\n                return customAge;\r\n            })\r\n        }),\r\n\r\n        onSubmit: (values, { resetForm }) => {\r\n            console.log(JSON.stringify(values, null, 2));\r\n            console.log(\"Files\", values.file);\r\n            console.log(\"dob\", values.dob);\r\n            resetForm()\r\n        },\r\n    });\r\n\r\n    //^ password Eye icon button\r\n    const [passwordEye, setPasswordEye] = useState(\"password\")\r\n    const [cnfpasswordEye, setCnfPasswordEye] = useState(\"password\")\r\n\r\n    return (\r\n        <div className='d-flex justify-content-center '>\r\n            <div className='bg-white shadow w-md-25 w-lg-25 mt-1 pb-4 pt-3 col-10 col-sm-6 col-md-5 col-lg-4 rounded'>\r\n\r\n                <form action=\"\" onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\r\n\r\n                    <h3>SignUp</h3>\r\n\r\n                    {/* //*Name */}\r\n                    <label htmlFor=\"fname\" style={{ marginRight: \"12vw\" }}>Name</label> <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name='fname'\r\n                        onChange={formik.handleChange}\r\n\r\n\r\n                        value={formik.values.fname}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        placeholder=\"Enter your name\"\r\n                    />\r\n                    {formik.errors.fname ? <div style={{ color: \"red\" }}>{formik.errors.fname}</div> : null}\r\n\r\n                    {/* //* Email */}\r\n                    <label htmlFor=\"email\" style={{ marginRight: \"8.5vw\" }}>Email Address</label> <br />\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name='email'\r\n                        onChange={formik.handleChange}\r\n\r\n                        value={formik.values.email}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        placeholder=\"Enter your email address\"\r\n                    />\r\n                    {formik.errors.email ? <div style={{ color: \"red\" }}>{formik.errors.email}</div> : null}\r\n\r\n                    {/* //* Password */}\r\n                    <label htmlFor=\"password\" style={{ marginRight: \"10.5vw\" }}>Passwrod</label><br />\r\n                    <input\r\n                        type={passwordEye}\r\n                        id=\"passsword\"\r\n                        name='password'\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.password}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        placeholder=\"Enter your password\"\r\n                    />\r\n                    {passwordEye === \"password\" ?\r\n                        <span style={{ position: \"absolute\", transform: \"translateX(-23px)\", }} >\r\n                            <FaEyeSlash onClick={() => setPasswordEye(\"text\")}\r\n                            /></span>\r\n                        : <span style={{ position: \"absolute\", transform: \"translateX(-23px)\", }} >\r\n                            <FaEye onClick={() => setPasswordEye(\"password\")} /></span>\r\n                    }\r\n\r\n                    {formik.errors.password ? <div style={{ color: \"red\" }}>{formik.errors.password}</div> : null}\r\n\r\n                    {/* //* Confirm Password */}\r\n                    <label htmlFor=\"comfirmPassword\" style={{ marginRight: \"7vw\" }}>Confirm Passwrod</label><br />\r\n                    <input\r\n                        type={cnfpasswordEye}\r\n                        id=\"comfirmPassword\"\r\n                        name='confirmPassword'\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.confirmPassword}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        placeholder=\"Enter your confirm password\"\r\n                    />\r\n                    {cnfpasswordEye === \"password\" ?\r\n                        <span style={{ position: \"absolute\", transform: \"translateX(-23px)\", }} >\r\n                            <FaEyeSlash onClick={() => setCnfPasswordEye(\"text\")}\r\n                            /></span>\r\n                        : <span style={{ position: \"absolute\", transform: \"translateX(-23px)\", }} >\r\n                            <FaEye onClick={() => setCnfPasswordEye(\"password\")} /></span>\r\n                    }\r\n                    <br />\r\n                    {formik.errors.confirmPassword ? <div style={{ color: \"red\" }}>{formik.errors.confirmPassword}</div> : null}\r\n\r\n                    {/* //* Mobile */}\r\n                    <label htmlFor=\"mob\" style={{ marginRight: \"10vw\" }}>Mobile No</label> <br />\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"mob\"\r\n                        name='mob'\r\n                        onChange={formik.handleChange}\r\n\r\n                        value={formik.values.mob}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        placeholder=\"Enter your mobile number\"\r\n                    />\r\n\r\n                    <br />\r\n                    {formik.errors.mob ? <div style={{ color: \"red\" }}>{formik.errors.mob}</div> : null}\r\n\r\n                    {/* //* City */}\r\n                    <label htmlFor=\"city\" style={{ marginRight: \"13vw\" }}>City</label> <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        name='city'\r\n                        onChange={formik.handleChange}\r\n\r\n                        value={formik.values.city}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        placeholder=\"Enter your city\"\r\n                    /> <br />\r\n                    {formik.errors.city ? <div style={{ color: \"red\" }}>{formik.errors.city}</div> : null}\r\n\r\n                    {/* //* Dob */}\r\n                    <label htmlFor=\"dob\" style={{ marginRight: \"9vw\" }}>Date of Birth</label> <br />\r\n                    <input\r\n                        type=\"date\"\r\n                        id=\"dob\"\r\n                        name='dob'\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.dob}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                    /> <br />\r\n                    {formik.errors.dob ? <div style={{ color: \"red\" }}>{formik.errors.dob}</div> : null}\r\n\r\n                    {/* //* Gender */}\r\n                    <div>\r\n                        <label htmlFor=\"gender\">Gender</label>\r\n\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            value=\"male\"\r\n                            id=\"male\"\r\n                            onChange={formik.handleChange}\r\n                            style={{ marginLeft: \"10px\" }} />\r\n                        <label htmlFor=\"male\" style={{ marginLeft: \"10px\" }}>Male</label>\r\n\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            value=\"female\"\r\n                            id=\"gender\"\r\n                            onChange={formik.handleChange}\r\n                            style={{ marginLeft: \"10px\" }} />\r\n                        <label htmlFor=\"female\" style={{ marginLeft: \"10px\" }}>Female</label>\r\n                    </div>\r\n                    {formik.errors.gender ? <div style={{ color: \"red\" }}>{formik.errors.gender}</div> : null}\r\n\r\n                    {/* //* dropdown country */}\r\n                    <div>\r\n                        <select\r\n                            id=\"country\"\r\n                            name=\"country\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.country}\r\n                            style={{ width: \"15vw\", height: \"5vh\" }} >\r\n\r\n                            <option value=\"\">Select Country</option>\r\n                            <option value=\"India\">India</option>\r\n                            <option value=\"USA\">United States</option>\r\n                            <option value=\"UK\">United Kingdom</option>\r\n                            <option value=\"Canada\">Canada</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                    {formik.errors.country ? <div style={{ color: \"red\" }}>{formik.errors.country}</div> : null}\r\n\r\n                    {/* //* Checkbox */}\r\n                    <div>\r\n                        <label>Interests:</label>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"interests\"\r\n                                value=\"java\"\r\n                                checked={formik.values.interests.includes('java')}\r\n                                onChange={formik.handleChange}\r\n                                className='ms-1'\r\n                            />\r\n                            Java\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"interests\"\r\n                                value=\"js\"\r\n                                checked={formik.values.interests.includes('js')}\r\n                                onChange={formik.handleChange}\r\n                                className='ms-1'\r\n                            />\r\n                            Js\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"interests\"\r\n                                value=\"python\"\r\n                                checked={formik.values.interests.includes('python')}\r\n                                onChange={formik.handleChange}\r\n                                className='ms-1'\r\n                            />\r\n                            Python\r\n                        </label><br />\r\n                        {formik.errors.interests ? <div style={{ color: \"red\" }}>{formik.errors.interests}</div> : null}\r\n                    </div>\r\n\r\n\r\n                    {/* //* File */}\r\n                    <div>\r\n                        <label htmlFor=\"file\" style={{ marginRight: \"10vw\" }}>Upload File</label><br />\r\n                        <input\r\n                            id=\"file\"\r\n                            name=\"file\"\r\n                            type=\"file\"\r\n                            style={{ width: \"16vw\" }}\r\n                            onChange={(event) => formik.setFieldValue('file', event.currentTarget.files[0])}\r\n                        />\r\n                        {formik.errors.file ? <div style={{ color: \"red\" }}>{formik.errors.file}</div> : null}\r\n                    </div>\r\n\r\n                    {/* //* Age */}\r\n                    <div>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"ageGroup\"\r\n                                value=\"below18\"\r\n                                onChange={formik.handleChange} />\r\n                            Below 18\r\n                        </label>\r\n                        <label style={{ marginLeft: \"5px\" }}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"ageGroup\"\r\n                                value=\"above18\"\r\n                                onChange={formik.handleChange} />\r\n\r\n                            Above 18\r\n                        </label>\r\n                    </div>\r\n\r\n                    {formik.values.ageGroup === 'above18' && (\r\n                        <div>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"customAge\"\r\n                                onChange={formik.handleChange}\r\n                                placeholder='Enter your PAN number' />\r\n                            {formik.errors.customAge ? <div style={{ color: \"red\" }}>{formik.errors.customAge}</div> : null}\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className='mt-4'>\r\n                        <button type='submit' className='btn bg-success text-white'>Submit</button>\r\n                        <button type='reset' className='btn bg-warning text-white ms-4'>Reset</button>\r\n                    </div>\r\n                </form>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default FormikYupForm\r\n"],"names":["formik","useFormik","initialValues","fname","email","password","confirmPassword","mob","city","dob","gender","country","interests","file","ageGroup","customAge","validationSchema","Yup","max","matches","required","min","oneOf","test","value","size","includes","type","when","onSubmit","values","_ref","resetForm","console","log","JSON","stringify","passwordEye","setPasswordEye","useState","cnfpasswordEye","setCnfPasswordEye","_jsx","className","children","_jsxs","action","handleSubmit","onReset","handleReset","htmlFor","style","marginRight","id","name","onChange","handleChange","width","height","placeholder","errors","color","position","transform","FaEyeSlash","onClick","FaEye","marginLeft","checked","event","setFieldValue","currentTarget","files"],"sourceRoot":""}