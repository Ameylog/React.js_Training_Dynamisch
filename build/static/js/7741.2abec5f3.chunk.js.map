{"version":3,"file":"static/js/7741.2abec5f3.chunk.js","mappings":"qJAsFA,QApFA,WACI,MAAOA,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAG7CC,EAAS,GAIfH,EAAII,KAAI,CAACC,EAAKC,KAMLH,EAAOI,SAASF,IACjBF,EAAOK,KAAKH,GAETA,KAoBS,IAAII,IAAIT,GAA5B,MAKMU,EAAO,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAE3BC,EAASD,EAAKE,QAAO,CAACC,EAAMP,MACrBN,EAAIc,QAAQD,IAASP,KAGlCS,QAAQC,IAAIL,GAIZ,MAAMM,EAAUP,EAAKQ,QAAO,CAACC,EAAKN,KACzBM,EAAIZ,SAASM,IACdM,EAAIX,KAAKK,GAENM,IACR,IAEHJ,QAAQC,IAAIC,GAGZ,MACMG,EADM,QACIC,MAAM,IAMtB,MAJa,IAAI,IAAIZ,IAAIW,IAAME,KAAK,KAKhCC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uCAEJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIxB,EAAII,KAAI,CAACC,EAAKC,KAAUmB,EAAAA,EAAAA,KAAA,MAAAD,SAAiBnB,GAARC,QAErCmB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,KAAAD,SACKrB,EAAOC,KAAI,CAACC,EAAKC,KAAUmB,EAAAA,EAAAA,KAAA,MAAAD,SAAiBnB,GAARC,SAIrD,C","sources":["components/Day 10 card_nestedObject_ArrayDublicate/DublicateValue.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction DublicateValue() {\r\n    const [arr, setArr] = useState([10, 2, 5, 3, 2, 8, 3]);\r\n\r\n\r\n    const newArr = [];\r\n    let count = 0;\r\n\r\n    const temp = [];\r\n    arr.map((val, index) => {\r\n\r\n        //* dulicate value [ternary opertor]\r\n        // return (!newArr.includes(val))? newArr.push(val): \"\";\r\n\r\n        //* dulicate value\r\n        if (!newArr.includes(val)) {\r\n            newArr.push(val)\r\n        }\r\n        return val;\r\n\r\n        //* count and dublicate values\r\n        // if (newArr.includes(val)) {\r\n        //     count++;\r\n        //     temp.push(val)\r\n        // } \r\n        // else {\r\n        //     newArr.push(val)\r\n        // }\r\n        // return val;\r\n\r\n    })\r\n\r\n    // console.log(newArr);\r\n    // console.log(temp);\r\n\r\n    //^ By using set\r\n\r\n    // const newArr2=[new Set(arr)];  // print nested object\r\n    const newArr2 = [...new Set(arr)];\r\n    // console.log(\"newArray2:- \", newArr2);\r\n\r\n\r\n    //^ By using filter\r\n    const arr3 = [22, 4, 5, 2, 3, 4, 2];\r\n\r\n    const result = arr3.filter((item, index) => {\r\n        return !(arr.indexOf(item) != index)\r\n        // return arr.indexOf(item) != index    // return dublicate array element\r\n    })\r\n    console.log(result);\r\n\r\n    //^ By reduce\r\n\r\n    const result2 = arr3.reduce((acc, item) => {\r\n        if (!acc.includes(item)) {\r\n            acc.push(item)\r\n        }\r\n        return acc;\r\n    }, [])\r\n\r\n    console.log(result2)\r\n\r\n    //^ Dublicate character remove\r\n    const str = 'Hello';\r\n    const res = str.split(\"\");\r\n    // console.log(res);\r\n    const res2 = [...new Set(res)].join(\"\")\r\n    // console.log(res2);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Remove Dublicate Value from array</h3>\r\n\r\n            <h3> original Array</h3>\r\n            <p>{arr.map((val, index) => <li key={index}>{val}</li>)}</p>\r\n\r\n            <h3>Element Remove</h3>\r\n            <p>\r\n                {newArr.map((val, index) => <li key={index}>{val}</li>)}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DublicateValue\r\n"],"names":["arr","setArr","useState","newArr","map","val","index","includes","push","Set","arr3","result","filter","item","indexOf","console","log","result2","reduce","acc","res","split","join","_jsxs","children","_jsx"],"sourceRoot":""}