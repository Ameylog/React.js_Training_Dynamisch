{"version":3,"file":"static/js/2730.6237b95a.chunk.js","mappings":"oJA+EA,QA7EA,WAGI,MAAOA,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KAGpCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAG9BG,EAAKC,IAAUJ,EAAAA,EAAAA,WAAS,GA6B/B,OACIK,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,OAAQ,kBAAmBC,OAAQ,OAAQC,UAAW,QAASC,SAAA,EAC1GP,EAAAA,EAAAA,MAAA,QAAMQ,OAAO,GAAED,SAAA,EACXE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,WAEJE,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,QAAOH,SAAC,iBAAoB,KAACE,EAAAA,EAAAA,KAAA,UAAMA,EAAAA,EAAAA,KAAA,UAClDA,EAAAA,EAAAA,KAAA,SACIE,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,SApCMC,IAIlB,MAAMC,EAAgBD,EAAEE,OAAOC,MAAM,GAErC,GAAIF,EAAcG,MAAQH,EAAcG,KAAO,OAC3CpB,GAAO,OAGJ,CACH,MAAMqB,EAAO,IAAIC,WACjBD,EAAKE,OAAUP,IACXrB,EAAaqB,EAAEE,OAAOM,QACtBxB,GAAO,EAAM,EAEjBqB,EAAKI,cAAcT,EAAEE,OAAOC,MAAM,GACtC,KAwBSpB,GAAMW,EAAAA,EAAAA,KAAA,KAAGR,MAAO,CAAEwB,MAAO,OAAQlB,SAAC,qBAAuB,QAE9DE,EAAAA,EAAAA,KAAA,UAAMA,EAAAA,EAAAA,KAAA,UACNA,EAAAA,EAAAA,KAAA,UAAQiB,QAtBMC,KAClB9B,EAAUJ,EAAU,EAqBec,SAAC,mBAEhCE,EAAAA,EAAAA,KAAA,UAAQiB,QAASA,IAAM7B,EAAU,IAAKI,MAAO,CAAE2B,WAAY,QAASrB,SAAC,WAErEE,EAAAA,EAAAA,KAAA,UAAMA,EAAAA,EAAAA,KAAA,UACNA,EAAAA,EAAAA,KAAA,OAAAF,UACIE,EAAAA,EAAAA,KAAA,UACIoB,IAAKjC,EACLkC,MAAM,gBACN5B,MAAM,MACNC,OAAO,MACPF,MAAO,CAAE8B,UAAW,UAAWC,SAAU,iBAQ7D,C","sources":["components/Day 12 and 13 form_handling_ternary_&&/ImagePreview.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction ImagePreview() {\r\n\r\n    //^ set image \r\n    const [imageData, setImageData] = useState(\"\")\r\n\r\n    //^ set for preview\r\n    const [image2, setImage2] = useState(\"\")\r\n\r\n    //^ error\r\n    const [err, setErr] = useState(false)\r\n\r\n\r\n    const handleChange = (e) => {\r\n        // console.log(e.target.value);  // path\r\n        // console.log(e.target.files[0]);   // name , size, type , \r\n\r\n        const responseImage = e.target.files[0]\r\n\r\n        if (responseImage.size && responseImage.size > 1 * 1000 * 1024) {\r\n            setErr(true)\r\n            // console.log(\"file Size Exceed\");\r\n            \r\n        } else {\r\n            const file = new FileReader();\r\n            file.onload = (e) => {\r\n                setImageData(e.target.result)\r\n                setErr(false)\r\n            }\r\n            file.readAsDataURL(e.target.files[0]);\r\n        }\r\n        // console.log(file);\r\n    }\r\n\r\n    //^ Preview  function\r\n    const handlePreview = () => {\r\n        setImage2(imageData)\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: \"500px\", height: \"500px\", border: \"1px solid black\", margin: \"auto\", marginTop: \"40px\" }}>\r\n            <form action=\"\">\r\n                <h3>Image</h3>\r\n\r\n                <label htmlFor=\"image\">Image Upload</label> <br /><br />\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"image\"\r\n                    name=\"image\"\r\n                    onChange={handleChange}\r\n                // accept='image/png, image/jpeg,image/jpg'\r\n\r\n                />\r\n\r\n                {err ? <p style={{ color: \"red\" }}>File Size exceed</p> : \" \"}\r\n            </form>\r\n            <br /><br />\r\n            <button onClick={handlePreview}>Preview Image</button>\r\n\r\n            <button onClick={() => setImage2(\"\")} style={{ marginLeft: \"10px\" }}>Close</button>\r\n\r\n            <br /><br />\r\n            <div>\r\n                <iframe\r\n                    src={image2}\r\n                    title=\"image-preview\"\r\n                    width=\"200\"\r\n                    height=\"200\"\r\n                    style={{ objectFit: \"contain\", overflow: \"visible\" }}>\r\n                </iframe>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePreview;\r\n"],"names":["imageData","setImageData","useState","image2","setImage2","err","setErr","_jsxs","style","width","height","border","margin","marginTop","children","action","_jsx","htmlFor","type","id","name","onChange","e","responseImage","target","files","size","file","FileReader","onload","result","readAsDataURL","color","onClick","handlePreview","marginLeft","src","title","objectFit","overflow"],"sourceRoot":""}