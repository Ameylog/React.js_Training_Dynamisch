{"version":3,"file":"static/js/4162.ea541bb0.chunk.js","mappings":"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","sources":["components/Day 25 formOptimise/formOptimization/InputComponent.jsx","components/Day 25 formOptimise/formOptimization/ErrorCompoennt.jsx","components/Day 25 formOptimise/formOptimization/FormFormikYup.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nfunction InputComponent(props) {\r\n    const { type, name, id, value =null, placeholder, style, formik, labelName, labelStyle } = props\r\n    return <div>\r\n        <label htmlFor={id} style={labelStyle}>{labelName}</label> <br />\r\n        <input\r\n            type={type}\r\n            name={name}\r\n            id={id}\r\n            value={value == null ? formik.values[name] : value }\r\n            // value={formik.values[name]}\r\n            placeholder={placeholder}\r\n            style={style}\r\n            onChange={formik.handleChange} />\r\n    </div>\r\n}\r\n\r\nexport default InputComponent;\r\n","import React from 'react'\r\n\r\nfunction ErrorCompoennt(props) {\r\n\r\n  const { error } = props\r\n  return (\r\n    <div>\r\n      {error ? <div style={{ color: \"red\" }}>{error}</div> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorCompoennt;\r\n","import React, { useState } from 'react'\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { FaEyeSlash } from \"react-icons/fa\";\r\nimport InputComponent from './InputComponent';\r\nimport ErrorCompoennt from './ErrorCompoennt';\r\n\r\n\r\nfunction FormFormikYup() {\r\n\r\n    const formik = useFormik({\r\n        validateOnBlur: true,\r\n        initialValues: {\r\n            fname: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            mob: '',\r\n            city: '',\r\n            dob: null,\r\n            gender: \"\",\r\n            country: \"\",\r\n\r\n        },\r\n        // validate,\r\n        validationSchema: Yup.object({\r\n            fname: Yup.string()\r\n                .max(15, \"Must be 15 charcatre or less\")\r\n                .matches(/^[a-zA-Z][a-zA-Z\\s]*$/, \"Invalid name\")\r\n                .required(\"Name is required\"),\r\n\r\n            email: Yup.string()\r\n                .email(\"Invalid email address\")\r\n                .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, \"Invalid email address\")\r\n                .required(\"Email is required\"),\r\n\r\n            password: Yup.string()\r\n                .min(8, \"must be at least 8 charater\")\r\n                .max(16, \"Must be less than 16 character\")\r\n                .matches(/[!@#$%^&*(),.?\":{}|<>]/, \"Must conatin at least on charcater\")\r\n                .matches(/[0-9]/, \"Must contain at least one number\")\r\n                .matches(/[A-Z]/, \"Must contain at least one Uppercase\")\r\n                .matches(/[a-z]/, \"Must contain at least lowercase\")\r\n                .required(\"Password is required\"),\r\n\r\n            confirmPassword: Yup.string()\r\n                .min(8, \"must be at least 8 charater\")\r\n                .max(16, \"Must be less than 16 character\")\r\n                .matches(/[!@#$%^&*(),.?\":{}|<>]/, \"Must conatin at least on charcater\")\r\n                .matches(/[0-9]/, \"Must contain at least one number\")\r\n                .matches(/[A-Z]/, \"Must contain at least one Uppercase\")\r\n                .matches(/[a-z]/, \"Must contain at least lowercase\")\r\n                .oneOf([Yup.ref('password')], 'Passwords must match')\r\n                .required(\"Confirm Password is required\"),\r\n\r\n            mob: Yup.string()\r\n                .matches(/^\\d{10}$/, \"Must be 10 digits\")\r\n                .required(\"Mobile number required\"),\r\n\r\n            city: Yup.string()\r\n                .matches(/^[a-zA-Z][a-zA-Z\\s]*$/, \"Invalid city name\")\r\n                .max(15, \"Must be 15 charcatre or less\")\r\n                .required(\"City is required\"),\r\n\r\n            dob: Yup.date()\r\n                .min(\"2000-01-01\")\r\n                .required(\"Date of birth required\"),\r\n\r\n            gender: Yup.string()\r\n                .oneOf(['male', 'female'], \"Gender is required\")\r\n                .required(\"Gender is required\"),\r\n\r\n            country: Yup.string()\r\n                .required(\"Select the country\"),\r\n\r\n        }),\r\n\r\n        // validateOnBlur: false,\r\n        onSubmit: (values, { resetForm }) => {\r\n            console.log(JSON.stringify(values, null, 2));\r\n            alert(JSON.stringify(values, null, 2));\r\n            console.log(\"Files\", values);\r\n            // console.log(\"dob\", values.dob);\r\n            resetForm();\r\n        },\r\n    });\r\n\r\n    //^ password Eye icon button\r\n    const [passwordEye, setPasswordEye] = useState(\"password\")\r\n    const [cnfpasswordEye, setCnfPasswordEye] = useState(\"password\")\r\n\r\n    return (\r\n        <div className='d-flex justify-content-center '>\r\n            <div className='bg-white w-md-25 w-lg-25 mt-1 pb-4 pt-3 col-10 col-sm-6 col-md-5 col-lg-4 border-1 shadow rounded'>\r\n\r\n                <form action=\"\" onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\r\n\r\n                    <h3>SignUp</h3>\r\n\r\n                    {/* //*Name */}\r\n                    <InputComponent\r\n                        type={\"text\"}\r\n                        id={\"fname\"}\r\n                        name={\"fname\"}\r\n                        formik={formik}\r\n                        placeholder={\"Enter your name\"}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        labelName={\"Name\"}\r\n                        labelStyle={{ marginRight: \"12vw\" }}\r\n                    />\r\n\r\n                    <ErrorCompoennt error={formik.errors.fname} />\r\n\r\n                    {/* //* Email */}\r\n\r\n                    <InputComponent\r\n                        type={\"email\"}\r\n                        id={\"email\"}\r\n                        name={\"email\"}\r\n                        formik={formik}\r\n                        placeholder={\"Enter your email address\"}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        labelName={\"Email Address\"}\r\n                        labelStyle={{ marginRight: \"8.5vw\" }}\r\n                    />\r\n\r\n                    <ErrorCompoennt error={formik.errors.email} />\r\n\r\n                    {/* //* Password */}\r\n                    <InputComponent\r\n                        type={passwordEye}\r\n                        id={\"password\"}\r\n                        name={\"password\"}\r\n                        formik={formik}\r\n                        placeholder={\"Enter your password\"}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        labelName={\"Password\"}\r\n                        labelStyle={{ marginRight: \"10.5vw\" }}\r\n                    />\r\n\r\n                    {passwordEye === \"password\" ?\r\n                        <span style={{ position: \"absolute\", transform: \"translateX(-23px)\", }} >\r\n                            <FaEyeSlash onClick={() => setPasswordEye(\"text\")}\r\n                            /></span>\r\n                        : <span style={{ position: \"absolute\", transform: \"translateX(-23px)\", }} >\r\n                            <FaEye onClick={() => setPasswordEye(\"password\")} /></span>\r\n                    }\r\n\r\n                    <ErrorCompoennt error={formik.errors.password} />\r\n\r\n                    {/* //* Confirm Password */}\r\n\r\n                    <InputComponent\r\n                        type={cnfpasswordEye}\r\n                        id={\"comfirmPassword\"}\r\n                        name={\"confirmPassword\"}\r\n                        formik={formik}\r\n                        placeholder={\"Enter your confirm password\"}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        labelName={\"Confirm Password\"}\r\n                        labelStyle={{ marginRight: \"7vw\" }}\r\n                    />\r\n                    {cnfpasswordEye === \"password\" ?\r\n                        <span style={{ position: \"absolute\", transform: \"translateX(-23px)\", }} >\r\n                            <FaEyeSlash onClick={() => setCnfPasswordEye(\"text\")}\r\n                            /></span>\r\n                        : <span style={{ position: \"absolute\", transform: \"translateX(-23px)\", }} >\r\n                            <FaEye onClick={() => setCnfPasswordEye(\"password\")} /></span>\r\n                    }\r\n                    <ErrorCompoennt error={formik.errors.confirmPassword} />\r\n\r\n                    {/* //* Mobile */}\r\n\r\n                    <InputComponent\r\n                        type={\"number\"}\r\n                        id={\"mob\"}\r\n                        name={\"mob\"}\r\n                        formik={formik}\r\n                        placeholder={\"Enter your mobile number\"}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        labelName={\"Mobile No\"}\r\n                        labelStyle={{ marginRight: \"10vw\" }}\r\n                    />\r\n\r\n                    <ErrorCompoennt error={formik.errors.mob} />\r\n\r\n                    {/* //* City */}\r\n                    <InputComponent\r\n                        type={\"text\"}\r\n                        id={\"city\"}\r\n                        name={\"city\"}\r\n                        formik={formik}\r\n                        placeholder={\"Enter your city name\"}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        labelName={\"City\"}\r\n                        labelStyle={{ marginRight: \"13vw\" }}\r\n                    />\r\n                    <ErrorCompoennt error={formik.errors.city} />\r\n\r\n\r\n                    {/* //* Dob */}\r\n                    <InputComponent\r\n                        type={\"date\"}\r\n                        id={\"dob\"}\r\n                        name={\"dob\"}\r\n                        formik={formik}\r\n                        placeholder={\"Enter your city name\"}\r\n                        style={{ width: \"15vw\", height: \"5vh\" }}\r\n                        labelName={\"Date of Birth\"}\r\n                        labelStyle={{ marginRight: \"9vw\" }}\r\n                    />\r\n                    <ErrorCompoennt error={formik.errors.dob} />\r\n\r\n\r\n                    {/* //* Gender */}\r\n                    {/* <div>\r\n                        <label htmlFor=\"gender\">Gender</label>\r\n\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            value=\"male\"\r\n                            id=\"male\"\r\n                            onChange={formik.handleChange}\r\n                            style={{ marginLeft: \"10px\" }} />\r\n                        <label htmlFor=\"male\" style={{ marginLeft: \"10px\" }}>Male</label>\r\n\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            value=\"female\"\r\n                            id=\"gender\"\r\n                            onChange={formik.handleChange}\r\n                            style={{ marginLeft: \"10px\" }} />\r\n                        <label htmlFor=\"female\" style={{ marginLeft: \"10px\" }}>Female</label>\r\n                    </div>\r\n                    {formik.errors.gender ? <div style={{ color: \"red\" }}>{formik.errors.gender}</div> : null} */}\r\n\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <label htmlFor='gender'>Gender</label> <br />\r\n                        <InputComponent\r\n                            type={\"radio\"}\r\n                            id={\"male\"}\r\n                            name={\"gender\"}\r\n                            formik={formik}\r\n                            style={{ marginLeft: \"10px\" }}\r\n                            labelName={\"Male\"}\r\n                            labelStyle={{ marginLeft: \"10px\" }}\r\n                            value={\"male\"}\r\n\r\n                        />\r\n\r\n                        <InputComponent\r\n                            type={\"radio\"}\r\n                            id={\"female\"}\r\n                            name={\"gender\"}\r\n                            formik={formik}\r\n                            style={{ marginLeft: \"10px\" }}\r\n                            labelName={\"Female\"}\r\n                            labelStyle={{ marginLeft: \"10px\" }}\r\n                            value={\"female\"}\r\n\r\n                        />\r\n                    </div>\r\n                    <ErrorCompoennt error={formik.errors.dob} />\r\n\r\n\r\n                    {/* //* dropdown country */}\r\n                    <div>\r\n                        <select\r\n                            id=\"country\"\r\n                            name=\"country\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.country}\r\n                            style={{ width: \"15vw\", height: \"5vh\" }} >\r\n\r\n                            <option value=\"\">Select Country</option>\r\n                            <option value=\"India\">India</option>\r\n                            <option value=\"USA\">United States</option>\r\n                            <option value=\"UK\">United Kingdom</option>\r\n                            <option value=\"Canada\">Canada</option>\r\n\r\n                        </select>\r\n                    </div>\r\n                    {formik.errors.country ? <div style={{ color: \"red\" }}>{formik.errors.country}</div> : null}\r\n\r\n\r\n\r\n                    {/* //* Checkbox */}\r\n                     {/* <div>\r\n                        <label>Interests:</label>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"interests\"\r\n                                value=\"java\"\r\n                                checked={formik.values.interests.includes('java')}\r\n                                onChange={formik.handleChange}\r\n                                className='ms-1'\r\n                            />\r\n                            Java\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"interests\"\r\n                                value=\"js\"\r\n                                checked={formik.values.interests.includes('js')}\r\n                                onChange={formik.handleChange}\r\n                                className='ms-1'\r\n                            />\r\n                            Js\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"interests\"\r\n                                value=\"python\"\r\n                                checked={formik.values.interests.includes('python')}\r\n                                onChange={formik.handleChange}\r\n                                className='ms-1'\r\n                            />\r\n                            Python\r\n                        </label><br />\r\n                        {formik.errors.interests ? <div style={{ color: \"red\" }}>{formik.errors.interests}</div> : null}\r\n                    </div> */}\r\n\r\n\r\n                    {/* //* File */}\r\n                    {/* <div>\r\n                        <label htmlFor=\"file\" style={{ marginRight: \"10vw\" }}>Upload File</label><br />\r\n\r\n                        <input\r\n                            id=\"file\"\r\n                            name=\"file\"\r\n                            type=\"file\"\r\n                            style={{ width: \"16vw\" }}\r\n                            onChange={(event) => formik.setFieldValue('file', event.currentTarget.files[0])}\r\n                        />\r\n                        {formik.errors.file ? <div style={{ color: \"red\" }}>{formik.errors.file}</div> : null}\r\n                    </div>  */}\r\n\r\n                \r\n\r\n                    <div className='mt-4'>\r\n                        <button type='submit' className='btn bg-success text-white'>Submit</button>\r\n                        <button type='reset' className='btn bg-warning text-white ms-4'>Reset</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormFormikYup;\r\n"],"names":["props","type","name","id","value","placeholder","style","formik","labelName","labelStyle","_jsxs","children","_jsx","htmlFor","values","onChange","handleChange","error","color","useFormik","validateOnBlur","initialValues","fname","email","password","confirmPassword","mob","city","dob","gender","country","validationSchema","Yup","max","matches","required","min","oneOf","onSubmit","_ref","resetForm","console","log","JSON","stringify","alert","passwordEye","setPasswordEye","useState","cnfpasswordEye","setCnfPasswordEye","className","action","handleSubmit","onReset","handleReset","InputComponent","width","height","marginRight","ErrorCompoennt","errors","position","transform","FaEyeSlash","onClick","FaEye","display","justifyContent","marginLeft"],"sourceRoot":""}