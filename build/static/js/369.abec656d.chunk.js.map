{"version":3,"file":"static/js/369.abec656d.chunk.js","mappings":"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","sources":["components/Day 11 todo_list/Todo.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport NODataImg from \"../../images/NoDataImg.png\"\r\n\r\nfunction Todo() {\r\n\r\n    //^ store Task\r\n    const [taskList, setTaskList] = useState([])\r\n\r\n    //^ Completed Task\r\n    const [compltedList, setCompltedList] = useState([])\r\n\r\n    //^ Taking Input \r\n    const [inputTask, setInputTask] = useState(\"\")\r\n\r\n    const handleInput = (e) => {\r\n        // console.log(e.target.value);\r\n        if (e.target.value.trim() !== 0) {\r\n            setInputTask(e.target.value);\r\n        }\r\n\r\n    }\r\n\r\n    const handleTask = (e) => {\r\n        e.preventDefault()\r\n        const result = inputTask.trim();\r\n        if (result) {\r\n            setTaskList([...taskList, result])\r\n        }\r\n        setInputTask(\"\")\r\n    }\r\n\r\n    // Complted button => move element from task list to compelted liste\r\n    const handleCompltedTask = (index) => {\r\n        const value = taskList.filter((val) => val === taskList[index]);\r\n        setCompltedList([...compltedList, value])\r\n        setTaskList([...taskList.filter((val) => val !== taskList[index])])\r\n    }\r\n\r\n    // Revert Button => move element from  compelted list to task list\r\n    const handleReventTask = (index) => {\r\n\r\n        const value = compltedList.filter((val) => val === compltedList[index]);\r\n        setTaskList([...taskList, value])\r\n        setCompltedList([...compltedList.filter((val) => val !== compltedList[index])])\r\n    }\r\n\r\n    // Priority => set high and low Priority\r\n    const handlePriority = (e, index) => {\r\n\r\n        const value = taskList.filter((val) => val === taskList[index]);\r\n        const value2 = taskList.filter((val) => val !== taskList[index]);\r\n\r\n        if (e.target.value === \"high\") {\r\n            setTaskList([...value, ...value2])\r\n        } else {\r\n            setTaskList([...value2, ...value])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h3 className='mt-5'>Todo App</h3>\r\n\r\n            <div>\r\n                <form action=\"\">\r\n                    <label htmlFor=\"task\">Add the Task</label> <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"task\"\r\n                        id=\"task\"\r\n                        value={inputTask}\r\n                        placeholder='Enter the task ...'\r\n                        className='form-Input'\r\n                        onInput={handleInput}\r\n                        required\r\n                    />\r\n\r\n                    <button onClick={handleTask} className='ms-3 bg-success border-0 text-white px-3 py-2 rounded'>Add Task</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className='d-flex justify-content-center align-item-center'>\r\n                <div className='mt-4 w-25 ms-4 me-3'>\r\n                    {/* {console.log(taskList)} */}\r\n\r\n                    <h3 >Task List </h3>\r\n\r\n                    {\r\n                        taskList.map((val, index) => {\r\n                            return <ul key={index}>\r\n                                <li key={index}>{val}\r\n\r\n                                    <button\r\n                                        onClick={() => handleCompltedTask(index)}\r\n                                        className='ms-3 bg-danger rounded border-0 px-2 py-1 text-white'>Compelted</button>\r\n\r\n\r\n                                    <select\r\n                                        name=\"select_Priority\" id=\"select_Priority\" className='ms-2 btn-group py-1'\r\n                                        value=\"select\"\r\n                                        onChange={(e) => handlePriority(e, index)}\r\n                                    >\r\n\r\n                                        <option value=\"select\" disabled >Select Priority</option>\r\n                                        <option value=\"high\">High</option>\r\n                                        <option value=\"low\">Low</option>\r\n                                    </select>\r\n\r\n                                </li>\r\n                            </ul>\r\n\r\n                        })\r\n                    }\r\n                    {/* {(taskList.length===0)?<p className='text-danger fst-italic fs-5'>No Data Found...</p>:\" \"} */}\r\n                    {(taskList.length === 0) ? <img src={NODataImg} alt='No Data found' className='w-100' /> : \" \"}\r\n\r\n                </div>\r\n\r\n                <div className='mt-4 w-25 ms-5'>\r\n                    {/* {console.log(taskList)} */}\r\n\r\n                    <h3>Complted List </h3>\r\n\r\n                    {\r\n                        compltedList.map((val, index) => {\r\n                            return <ul key={index}>\r\n                                <li >{val}\r\n                                    <button\r\n                                        onClick={(e) => handleReventTask(index)}\r\n                                        className='ms-3 bg-warning rounded border-0 px-2 py-1'\r\n                                    >Revent</button>\r\n                                </li>\r\n                            </ul>\r\n                        })\r\n                    }\r\n\r\n                    {/* {(compltedList.length===0)?<p className='text-danger fst-italic fs-5'>List is Empty...</p>:\" \"} */}\r\n\r\n                    {(compltedList.length === 0) ? <img src={NODataImg} alt='No Data found' className='w-100' /> : \" \"}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n"],"names":["taskList","setTaskList","useState","compltedList","setCompltedList","inputTask","setInputTask","_jsxs","children","_jsx","className","action","htmlFor","type","name","id","value","placeholder","onInput","e","target","trim","required","onClick","preventDefault","result","map","val","index","filter","handleCompltedTask","onChange","handlePriority","value2","disabled","length","src","NODataImg","alt","handleReventTask"],"sourceRoot":""}