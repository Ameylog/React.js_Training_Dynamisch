{"version":3,"file":"static/js/7902.f157cb6c.chunk.js","mappings":"4IAsCA,QApCA,SAAgBA,GAEd,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MA6BnC,OA3BAK,EAAAA,EAAAA,YAAU,KACRC,iBACE,IACE,MAAMC,QAAiBC,MAAMX,GAC7B,IAAKU,EAASE,GACZ,MAAM,IAAIC,MAAM,wBAElB,MAAMC,QAAaJ,EAASI,OAC5BZ,EAAQY,EAEV,CAAE,MAAOR,GACPC,EAASD,EACX,CAAC,QACCD,GAAa,EACf,CACF,CAEAU,GAGO,KACLb,EAAQ,MACRG,GAAa,GACbE,EAAS,KAAK,IAEf,CAACP,IAEG,CAAEC,OAAMG,YAAWE,QAC5B,E,aCHA,QA9BA,WACI,MAEM,KAAEL,EAAI,UAAEG,EAAS,MAAEE,GAAUU,EAFpB,8CAIf,OAAIZ,GACOa,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAGZZ,GACOa,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,UAAQZ,EAAMc,YAI1BD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJD,EAAAA,EAAAA,KAAA,OAAAC,SAAMG,KAAKC,UAAUrB,EAAM,KAAM,KAChCsB,QAAQC,IAAIH,KAAKC,UAAUrB,EAAM,KAAM,MAWpD,C","sources":["components/Day 29 Hoc_Lazy_loading_Custome_hook/customeHook/useApi.jsx","components/Day 29 Hoc_Lazy_loading_Custome_hook/customeHook/useApiDemo.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction useApi(apiUrl) {\r\n  \r\n  const [data, setData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const json = await response.json();\r\n        setData(json);\r\n\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n\r\n    // claenaup function\r\n    return () => {\r\n      setData(null);\r\n      setIsLoading(true);\r\n      setError(null);\r\n    };\r\n  }, [apiUrl]);\r\n\r\n  return { data, isLoading, error };\r\n}\r\n\r\nexport default useApi;\r\n","import React from 'react';\r\nimport useApi from './useApi';\r\n\r\nfunction useApiDemo() {\r\n    const apiUrl = 'https://jsonplaceholder.typicode.com/users'\r\n\r\n    const { data, isLoading, error } = useApi(apiUrl);\r\n\r\n    if (isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Data from API:</h1>\r\n            <pre>{JSON.stringify(data, null, 2)}</pre>\r\n            {console.log(JSON.stringify(data, null, 2))}\r\n            {/* {\r\n                data.map((val) => {\r\n                    return <ul>\r\n                        <li>{val.name}</li>\r\n                        <li>{val.username}</li>\r\n                    </ul>\r\n                })\r\n            } */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default useApiDemo;\r\n"],"names":["apiUrl","data","setData","useState","isLoading","setIsLoading","error","setError","useEffect","async","response","fetch","ok","Error","json","fetchData","useApi","_jsx","children","_jsxs","message","JSON","stringify","console","log"],"sourceRoot":""}